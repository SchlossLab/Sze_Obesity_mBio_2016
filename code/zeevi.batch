#!bash

DIR=data/zeevi

# pull down all of the sequence data...
wget -r -q -np -nd -k -P $DIR ftp://ftp.sra.ebi.ac.uk/vol1/ERA540/ERA540323/fastq/


# have to unzip since the index sequences are in the sequence headers :(
gunzip $DIR/*gz


# match the sequence names with their index sequences output as a *indices file
for R1_FASTQ in $DIR/*R1_001.fastq
do
	INDEX_FILE=$(echo $R1_FASTQ | sed 's/fastq/indices/')
	echo $INDEX_FILE
	grep "^@M" $R1_FASTQ | sed 's/@\(M.*\) .*:\(\w*\)$/\1\t\2/' > $INDEX_FILE
done


# generate groups file for each sequencing run
for INDEX_FILE in $DIR/*indices
do
	R -e "source(\"code/zeevi.R\");get_groups_file(\"$INDEX_FILE\")"
done


# build the contigs
for R1_FASTQ in $DIR/*R1_001.fastq
do
	R2_FASTQ=$(echo $R1_FASTQ | sed 's/_R1_/_R2_/')
	mothur \"#make.contigs(ffastq=$R1_FASTQ, rfastq=$R2_FASTQ, rename=F, processors=8)\"
done


# pick out the sequences that matched to an index
for CONTIGS in $DIR/*trim.contigs.fasta
do
	GROUPS_FILE=$(echo $CONTIGS | sed 's/trim.contigs.fasta/groups/')
	ACCNOS_FILE=$(echo $CONTIGS | sed 's/trim.contigs.fasta/accnos/')
	cut -f 1 $GROUPS_FILE > $ACCNOS_FILE
	mothur "#get.seqs(fasta=$CONTIGS, accnos=$ACCNOS_FILE);
					screen.seqs(fasta=current, group=$GROUPS_FILE, maxambig=0, maxhomop=8, maxlength=275)"
done


# merge files for further processing...
cat $DIR/*trim.contigs.pick.good.fasta > $DIR/zeevi.fasta
cat $DIR/*.good.groups > $DIR/zeevi.groups


# let's roll...
mothur "#rename.seqs(fasta=$DIR/zeevi.fasta, group=$DIR/zeevi.groups);
	unique.seqs(fasta=current);
	align.seqs(fasta=current, reference=data/references/silva.v4.align, processors=8);
	count.seqs(name=current, group=current, processors=1);
	screen.seqs(fasta=current, count=current, start=1968, end=11550, processors=8);
	filter.seqs(fasta=current, vertical=T, trump=.);
	unique.seqs(fasta=current, count=current);
	pre.cluster(fasta=current, count=current, diffs=2, processors=4);
	chimera.uchime(fasta=current, count=current, dereplicate=t, processors=8);
	remove.seqs(fasta=current, accnos=current);
	classify.seqs(fasta=current, count=current, reference=data/references/trainset14_032015.pds.fasta, taxonomy=data/references/trainset14_032015.pds.tax, cutoff=80, processors=8);
	remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota);
	cluster.split(fasta=current, count=current, taxonomy=current, splitmethod=classify, taxlevel=6, classic=T, cluster=f);
	cluster.split(file=current, classic=T, processors=4);
	make.shared(list=current, count=current, label=0.03);
	classify.otu(list=current, count=current, taxonomy=current, label=0.03);
	get.oturep(fasta=current, count=current, list=current, label=0.03, method=abundance);"

R -e "source('code/zeevi.R'); link_shared_and_metadata()"

mothur "#sub.sample(shared=data/zeevi/zeevi.shared, label=0.03, size=4000);
	dist.shared(shared=data/zeevi/zeevi.shared, calc=braycurtis, label=0.03, subsample=4000, iters=100, processors=8);
	summary.single(shared=data/zeevi/zeevi.shared, calc=nseqs-sobs-shannon-shannoneven, subsample=4000)"

mv data/zeevi/zeevi.renamed.unique.good.filter.unique.precluster.pick.pick.an.unique_list.0.03.rep.fasta data/zeevi/zeevi.rep.fasta
mv data/zeevi/zeevi.renamed.unique.good.filter.unique.precluster.pick.pick.an.unique_list.0.03.cons.taxonomy data/zeevi/zeevi.taxonomy
